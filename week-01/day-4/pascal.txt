 int i;
    int j;
    int k;
    int l;

    for(i=0; i=6; i++){    //sorok
        printf(" * ");
        if(i=6){
            for(l=0; l<5; l++){
             //printf("%d\n", l);
           printf(" * \n");
                    }

               }

        /*
        for(k=0; k<6; k++)
        printf("%d ", i);
        //printf(" * ");
        */
    }
    /*
    for (j=0; j< 5; j++){ //oszlopok
        for(l=0; l<5; l++){
             printf("%d\n", j);
           //printf(" * ");
        }

       }*/






régebbi:

 int i;
    int j;
    int k;
    int l;


    for(i=0; i<6; i++){   //sorok
        for(k=0; k<6; k++){
            //printf("%d ", i);
        printf(" * ");
        }

    }
    for (j=0; j< 5; j++){ //oszlopok
        for(l=0; l<5; l++){
             //printf("%d\n", j);
           printf(" * ");
        }

       }


jól müködõ sor és oszlop:

   int i;
    int j;


    for(i=0; i<6; i++){   //sorok

        printf(" * ");

    }
    for (j=0; j< 5; j++){ //oszlopok

        printf(" * \n");


       }



gyémánt:

#include <stdio.h>
#include <stdlib.h>


/*
create a program which draws a diamond, like this:
123456*123456
1234* * *1234
12* * * * *12
* * * * * * *
* * * * * * *
12* * * * *12
1234* * *1234
123456*123456

(6* 8) +1 oszlop teli + (6*8)


*/


int main()
{
    int bevitel=0, c=0, k=0, space = 1;

    printf("Enter number of rows\n");
    scanf("%d", &bevitel);

    space = bevitel - 1;

    for (k = 1; k <= bevitel; k++)
    {
    for (c = 1; c <= space; c++)
      printf(" ");

    space--;

    for (c = 1; c <= 2*k-1; c++)
        printf("*");

    printf("\n");
    }

    space = 1;

    for (k = 1; k <= bevitel - 1; k++)
    {
    for (c = 1; c <= space; c++)
      printf(" ");

    space++;

    for (c = 1 ; c <= 2*(bevitel-k)-1; c++)
      printf("*");

    printf("\n");
    }


    return 0;
}

